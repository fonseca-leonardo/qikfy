import Head from "next/head";
import { useEffect, useRef, useState } from "react";
import { useDrag, useDrop } from "react-dnd";

const dragItems = Array.from({ length: 20 }).map((_, index) => ({
  id: `${index}-item`,
  content: "Item " + index,
}));

interface DragCardProps {
  id: string;
  content: string;
  currentHover: string;
  changeCurrentHover: (id: string) => void;
}

const DragCard = ({
  id,
  content,
  currentHover,
  changeCurrentHover,
}: DragCardProps) => {
  const isHovering = currentHover === id;
  const ref = useRef<HTMLDivElement>(null);

  const [, dragRef] = useDrag({
    type: "components",
    item: { id, content },
    collect: (monitor) => ({
      isDragging: monitor.isDragging(),
    }),
    end(draggedItem, monitor) {
      changeCurrentHover("");
    },
  });

  const [, dropRef] = useDrop<{ id: string }>({
    accept: "components",
    hover: (item, monitor) => {
      if (id !== currentHover) {
        changeCurrentHover(id);
      }
    },
    drop: (item, monitor) => {
      changeCurrentHover("");
    },
    collect: (monitor) => ({
      isOver: monitor.isOver(),
      dropId: id,
    }),
  });

  useEffect(() => {
    dragRef(dropRef(ref));
  }, [dragRef, dropRef]);

  return (
    <div
      ref={ref}
      style={{
        color: isHovering ? "red" : "black",
        minHeight: 20,
        border: "1px solid black",
        width: 100,
      }}
    >
      {content}
    </div>
  );
};

export default function Home() {
  const [currentHover, setCurrentHover] = useState<string>("");
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <h1>AQUI</h1>
        <div>
          {dragItems.map((el) => (
            <div key={el.id}>
              <DragCard
                {...el}
                currentHover={currentHover}
                changeCurrentHover={setCurrentHover}
              />
            </div>
          ))}
        </div>
      </main>
    </>
  );
}
